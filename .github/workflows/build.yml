# Copyright (c) 2023 Hamothy
# Copyright (c) 2015 Andrew Gallant

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

name: build

on:
  workflow_dispatch:
  push:
    paths:
      - "src/**"
      - "Cargo.toml"
      - "Cargo.lock"
  pull_request:
    paths:
      - "src/**"
      - "Cargo.toml"
      - "Cargo.lock"

env:
  BINARY: mdbook-template

jobs:
  compile:
    env:
      CARGO: cargo
      TARGET_FLAGS:
      TARGET_DIR: ./target
      RUST_BACKTRACE: 1
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - stable
          - nightly-gnu
          - nightly-musl
          - nightly-32
          - nightly-arm
          - macos
          - win-msvc
          - win-gnu
        include:
          - build: stable
            os: ubuntu-22.04
            rust: stable
          - build: nightly-gnu
            os: ubuntu-22.04
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: nightly-musl
            os: ubuntu-22.04
            rust: nightly
            target: x86_64-unknown-linux-musl
          - build: nightly-32
            os: ubuntu-22.04
            rust: nightly
            target: i686-unknown-linux-gnu
          - build: nightly-arm
            os: ubuntu-22.04
            rust: nightly
            target: arm-unknown-linux-gnueabihf
          - build: macos
            os: macos-12
            rust: nightly
          - build: win-msvc
            os: windows-2022
            rust: nightly
          - build: win-gnu
            os: windows-2022
            rust: nightly-x86_64-gnu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install packages (Ubuntu)
        if: matrix.os == 'ubuntu-22.04'
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends musl-tools

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Use Cross
        if: matrix.target != ''
        run: |
          cargo install cross
          echo "CARGO=cross" >> $GITHUB_ENV
          echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
          echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show command used for Cargo
        run: |
          echo "cargo command is: ${{ env.CARGO }}"
          echo "target flag is: ${{ env.TARGET_FLAGS }}"

      - name: Compile
        run: ${{ env.CARGO }} build --verbose ${{ env.TARGET_FLAGS }}

      - name: Test
        run: ${{ env.CARGO }} test --verbose ${{ env.TARGET_FLAGS }}

      - name: Retrieve Name of Binary
        id: upload-artifact
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "windows-2022" ]; then
            echo "name=${{ env.TARGET_DIR }}/debug/${{ env.BINARY }}.exe" >> $GITHUB_OUTPUT
          else
            echo "name=${{ env.TARGET_DIR}}/debug/${{ env.BINARY }}" >> $GITHUB_OUTPUT
          fi

      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY }}-${{ matrix.build }}
          path: ${{ steps.upload-artifact.outputs.name }}